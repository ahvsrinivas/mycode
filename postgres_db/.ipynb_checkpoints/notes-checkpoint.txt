 mkdir -p ~/mycode/postgres_db/
 cd ~/mycode/postgres_db/
 sudo apt-get install postgresql libpq-dev postgresql-client postgresql-client-common -y

Connect to postgreSQL

student@bchd:~/mycode/postgres_db$ sudo -i -u postgres

postgres@ubuntu createuser srini -P --interactive

Enter password for new role: srini
Enter it again: srini
Shall the new role be a superuser? (y/n) y
#Shall the new role be allowed to create databases? (y/n) y
#Shall the new role be allowed to create more new roles? (y/n) y
#Create a new database manually

postgres@ubuntu createdb testpython
postgres@ubuntu psql testpython

\dd
\dt
Quit.
\q
Type exit

Install the python library that lets us talk to the PostgreSQL instance, psycopg2
student@bchd:~/mycode/postgres_db$ python3 -m pip install psycopg2

Within the Launcher tab, click to Notebook > Python3 (ipykernel)
Rename your notebook postgres01.ipynb

Place the following in the first cell:

# python3 -m pip install psycopg2
import psycopg2

try:
    connect_str = "dbname='testpython' user='srini' host='localhost' " + \
                  "password='qwerty'"
    
    # use our connection values to establish a connection
    conn = psycopg2.connect(connect_str)
    
    # create a psycopg2 cursor that can execute queries
    cursor = conn.cursor()
    
    # create a new table with a single column called "name"
    cursor.execute("""CREATE TABLE IF NOT EXISTS tutorials (name char(40));""")
    
    # run a SELECT statement - no data in there, but we can try it
    cursor.execute("""SELECT * from tutorials""")
    
    conn.commit() # <--- makes sure the change is shown in the database
    rows = cursor.fetchall()
    print(rows)
    cursor.close()
    conn.close()
    
except Exception as e:
    print("Uh oh, can't connect. Invalid dbname, user or password?")
    print(e)    
Shift + Enter

Nothing is returned because nothing is in our database. Let's fix that.

Write the following in the next cell:

Create the following script

# update the following if your user and password for postgresql are different
# than what is shown below
user = "srini"
passw = "qwerty"

# f-string defines where to connect to
connect_str = f"dbname='testpython' user='{user}' host='localhost' password='{passw}'"

conn = psycopg2.connect(connect_str)
print("Opened database successfully")
cursor = conn.cursor()

cursor.execute('''CREATE TABLE IF NOT EXISTS COMPANY
 (ID INT PRIMARY KEY     NOT NULL,
 NAME           TEXT    NOT NULL,
 AGE            INT     NOT NULL,
 ADDRESS        CHAR(50),
 SALARY         REAL);''')
print("Table created successfully")


cursor.execute("INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) VALUES (1, 'Paul', 32, 'California', 20000.00 ) ON CONFLICT DO NOTHING")
cursor.execute("INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) VALUES (2, 'Allen', 25, 'Texas', 15000.00 ) ON CONFLICT DO NOTHING")
cursor.execute("INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) VALUES (3, 'Teddy', 23, 'Norway', 20000.00 ) ON CONFLICT DO NOTHING")
cursor.execute("INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) VALUES (4, 'Mark', 25, 'Pennsylvania ', 65000.00 ) ON CONFLICT DO NOTHING")
conn.commit()
print("Records created successfully")


cursor.execute("SELECT * FROM COMPANY")
selects = cursor.fetchall()
#selects = cursor.execute("SELECT id, name, address, salary from COMPANY")
for row in selects:
    print("ID = ", row[0])
    print("NAME = ", row[1])
    print("ADDRESS = ", row[2])
    print("SALARY = ", row[3], "\n")

print("Operation done successfully")
conn.close()
CHALLENGE 01 - Create a cell that inserts a new entry into the database. You can make up the user, age, state, and salary.
SOLUTION 01 - One possible solution is as follows:

# Place new data into the database
# update the following if your user and password for postgresql are different
# than what is shown below
user = "srini"
passw = "qwerty"

# f-string defines where to connect to
connect_str = f"dbname='testpython' user='{user}' host='localhost' password='{passw}'"

conn = psycopg2.connect(connect_str)
print("Opened database successfully")

# create a cursor that we can issue commands through
cursor = conn.cursor()

# place our new data into the database
cursor.execute("INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) VALUES (5, 'Larry', 99, 'Pennsylvania', 90000.00 ) ON CONFLICT DO NOTHING")
conn.commit()
conn.close()

CHALLENGE 02 - In a second cell, write some code to retrieve and display your new entry.

SOLUTION 02 - One possible solution is as follows:
# update the following if your user and password for postgresql are different
# than what is shown below
user = "srini"
passw = "qwerty"

# f-string defines where to connect to
connect_str = f"dbname='testpython' user='{user}' host='localhost' password='{passw}'"
conn = psycopg2.connect(connect_str)
print("Opened database successfully")
cursor = conn.cursor()
cursor.execute("SELECT * FROM COMPANY WHERE ID = '5'")
new_entry = cursor.fetchall()
print(new_entry)
conn.close()
